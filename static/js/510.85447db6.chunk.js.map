{"version":3,"file":"static/js/510.85447db6.chunk.js","mappings":"4OAKe,SAASA,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAiBA,OACE,0BACE,kBAAMH,SAbW,SAAAI,GACnBA,EAAIC,iBAEuB,KAAvBH,EAAYI,SAIhBN,EAASE,GACTE,EAAIG,OAAOC,QACZ,EAIG,WACE,kBACEC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAvBkB,SAAAT,GACxBD,EAAeC,EAAIU,cAAcC,MAAMC,cACxC,KAuBK,mBAAQP,KAAK,SAAb,UACE,SAAC,MAAD,UAKT,CCnCc,SAASQ,IACtB,OAA4ChB,EAAAA,EAAAA,UAAS,MAArD,eAAOiB,EAAP,KAAuBC,EAAvB,KACA,GAA0BlB,EAAAA,EAAAA,UAAS,MAAnC,eAAOmB,EAAP,KAAcC,EAAd,KACA,GAA4BpB,EAAAA,EAAAA,UAAS,QAArC,eAAOqB,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMxB,EAAcuB,EAAaE,IAAI,SAC/BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACH5B,IAILqB,EAAU,WACVQ,MAAM,4FAAD,OACyF7B,IAE3F8B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAEJ,OADAZ,EAAU,YACHJ,EAAkB,CAACgB,EAAUC,SACrC,IACAC,OAAM,SAAAjB,GAEL,OADAG,EAAU,YACHF,EAASD,EACjB,IACJ,GAAE,CAAClB,IAEJ,IAAMoC,EAAoB,SAAAC,GAIxB,OAHIrC,IAAgBqC,GAClBb,EAAyB,KAATa,EAAc,CAAEC,MAAOD,GAAS,CAAC,GAE5ChB,EAAU,OAClB,EAED,MAAe,SAAXD,GAEA,4BACE,mEACA,SAACvB,EAAD,CAAWC,SAAUsC,OAKZ,aAAXhB,GACK,wBAAKF,EAAMqB,UAGL,aAAXnB,GAEA,4BACE,SAACvB,EAAD,CAAWC,SAAUsC,IACpBpB,EAAe,GAAGwB,OAAS,GAC1B,wBACGxB,EAAe,GAAGyB,KAAI,SAAAC,GAAI,OACzB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMpB,GAA/C,SACGgB,EAAKK,SAFDL,EAAKE,GADW,OAS7B,yEAfR,CAoBD,C","sources":["components/SearchBar.js","page/Movies/Movies.js"],"sourcesContent":["import { useState } from 'react';\nimport { BsSearch } from 'react-icons/bs';\nimport PropTypes from 'prop-types';\n// import css from '../styles.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleInputChange = eve => {\n    setSearchQuery(eve.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = eve => {\n    eve.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      return;\n    }\n\n    onSubmit(searchQuery);\n    eve.target.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\">\n          <BsSearch />\n        </button>\n      </form>\n    </div>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport Searchbar from 'components/SearchBar';\n\nexport default function Movies() {\n  const [searchingMovie, setSearchingMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    setStatus('pending');\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=894ef72300682f1db325dae2afe3e7e2&query=${searchQuery}`\n    )\n      .then(response => response.json())\n      .then(movieList => {\n        setStatus('resolved');\n        return setSearchingMovie([movieList.results]);\n      })\n      .catch(error => {\n        setStatus('rejected');\n        return setError(error);\n      });\n  }, [searchQuery]);\n\n  const formSubmitHandler = data => {\n    if (searchQuery !== data) {\n      setSearchParams(data !== '' ? { query: data } : {});\n    }\n    return setStatus('idle');\n  };\n\n  if (status === 'idle') {\n    return (\n      <div>\n        <p>Enter the title of the movie to search</p>\n        <Searchbar onSubmit={formSubmitHandler} />\n      </div>\n    );\n  }\n\n  if (status === 'rejected') {\n    return <h1>{error.message}</h1>;\n  }\n\n  if (status === 'resolved') {\n    return (\n      <div>\n        <Searchbar onSubmit={formSubmitHandler} />\n        {searchingMovie[0].length > 0 ? (\n          <ul>\n            {searchingMovie[0].map(film => (\n              <li key={film.id}>\n                <Link to={`/movies/${film.id}`} state={{ from: location }}>\n                  {film.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No movies were found for your request</p>\n        )}\n      </div>\n    );\n  }\n}\n"],"names":["Searchbar","onSubmit","useState","searchQuery","setSearchQuery","eve","preventDefault","trim","target","reset","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","Movies","searchingMovie","setSearchingMovie","error","setError","status","setStatus","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","fetch","then","response","json","movieList","results","catch","formSubmitHandler","data","query","message","length","map","film","to","id","state","from","title"],"sourceRoot":""}